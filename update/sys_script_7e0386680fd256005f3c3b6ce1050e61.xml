<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_24017_sdlc_poker_story_result</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_24017_sdlc_poker_story_result">stateCHANGESTO4^end_resultVALCHANGES^ORblockedVALCHANGES^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="4"/>
            <item endquery="false" field="end_result" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="blocked" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Updating the story with the result</name>
        <order>900</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*
 * Written by: Roel Boiten
 * Description: Inserting the actual poker result to the story.
 * Version: 1.0
 * Date: 18 March 2016
 */
(function executeRule(current, previous /*null when async*/) {
	//Getting the real story and update.
	var story = new GlideRecord('rm_story');
	if (story.get('sys_id', current.story)) {
		story.story_points = current.end_result;
		if (current.blocked){
			story.blocked = current.blocked;
			story.blocked_reason = current.blocked_reason;
		}
		story.work_notes = 'Story points updated from poker room; ' + current.room.number + current.room;
		story.update();
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>roel.boiten</sys_created_by>
        <sys_created_on>2016-03-18 08:55:12</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>7e0386680fd256005f3c3b6ce1050e61</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Updating the story with the result</sys_name>
        <sys_overrides/>
        <sys_package display_value="SDLC Poker Application" source="x_24017_sdlc_poker">5c25b2670fc216005f3c3b6ce1050ee0</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="SDLC Poker Application">5c25b2670fc216005f3c3b6ce1050ee0</sys_scope>
        <sys_update_name>sys_script_7e0386680fd256005f3c3b6ce1050e61</sys_update_name>
        <sys_updated_by>roel.boiten</sys_updated_by>
        <sys_updated_on>2016-03-30 07:34:38</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=7e0386680fd256005f3c3b6ce1050e61"/>
</record_update>
